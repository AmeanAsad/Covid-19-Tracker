{"version":3,"sources":["components/search.jsx","components/navigation.jsx","components/geochart.jsx","components/homepage.jsx","components/countries.jsx","components/countryview.jsx","components/about.jsx","components/explore.jsx","App.js","serviceWorker.js","index.js","components/simulations/Agent-0.5-7-1.9.mp4","components/simulations/Agent-0.5-14-1.9.mp4","components/simulations/Agent-0.25-7-1.9.mp4","components/simulations/Agent-0.5-7-1.2.mp4","components/simulations/SIR-0.5-7-1.9.png","components/simulations/SIR-0.5-14-1.9.png","components/simulations/SIR-0.25-7-1.9.png","components/simulations/SIR-0.5-7-1.2.png","logo.svg"],"names":["source","axios","get","headers","then","res","form","data","map","user","key","title","as","Link","to","description","push","catch","err","console","log","initialState","isLoading","results","value","load","SearchMenu","state","handleResultSelect","e","result","window","location","href","handleSearchChange","setState","setTimeout","length","re","RegExp","_","escapeRegExp","filter","test","this","Search","size","placeholder","loading","onResultSelect","onSearchChange","debounce","leading","props","Component","Navigation","activeItem","handleItemClick","name","className","Menu","fluid","stackable","Item","active","onClick","position","GeoChart","countriesValues","mostVisited","country_data","data_all","svgRef","useRef","wrapperRef","vals","country","d1","current","parseInt","locations","world","d2","objects","countries","geometries","i","properties","locations2","previousTransformation","worldScaleFactor","worldmapBBox","worldmapBBoxOffsetX","worldmapBBoxOffsetY","translateX","translateY","topojson","continents","type","id","features","d","continent","worldDefaultTransformation","undefined","useEffect","selectedCountry","continentBBox","len","svg","select","attr","container","document","getElementById","width","clientWidth","height","clientHeight","projection","d3","path","geoPath","group","append","fitWorld","getBBox","Math","min","x","y","transition","focusLevel","changeFocus","clickedCountry","selectAll","animVal","duration","bBox","scaleFactor","zoomWorldToContinent","miniCountryScale","targetSize","on","textContent","zoomContinentToCountry","delay","colorScheme","colorScale","domain","log10","enter","call","replace","insert","stopPropagation","text","legend","style","range","yAxis","scale","ticks","Grid","centered","Row","textAlign","Button","basic","color","ref","Table","celled","striped","Header","HeaderCell","colSpan","Body","Cell","collapsing","Icon","Homepage","overall","recovered","cases","deaths","config","datum","end","recoveries","columns","Column","Message","icon","header","content","List","options","Countries","handleSort","clickedColumn","column","direction","reverse","sortBy","option","elements","million_stats","today_stats","table_header","table_body","header1","sorted","header2","header3","perMillion","today","el","Dropdown","button","floating","labeled","onChange","bind","singleLine","Country","todayDeaths","todayCases","componentDidMount","params","match","critical","casesPerOneMillion","deathsPerOneMillion","totalTests","testsPerOneMillion","labels","datasets","backgroundColor","hoverBackgroundColor","body","recovery_rate","round","death_rate","table_side","table_row","table_body1","table_body2","today_deaths","today_cases","critical_cases","recovery_progress","Progress","percent","progress","death_progess","active_cases","active_percentage","tests","Segment","About","contribute","Explore","message","autoPlay","loop","controls","src","Agent1","Sir1","Agent2","Sir2","Agent3","Sir3","Agent4","Sir4","App","exact","component","withRouter","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"js/main.10e2e50e.chunk.js","sourcesContent":["import _ from 'lodash'\nimport faker from 'faker';\nimport React, { Component } from 'react'\nimport { Search, Dropdown } from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\n\n\n\n\nconst config = {\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n};\n\nconst source = [];\n\naxios\n    .get(\"http://covid19-informatics.com/get/search/\",\n        config)\n    .then(res => {\n        const users = res.data\n        const form = users.map(user => {\n            return {\n                key: user.title,\n                as: Link,\n                to: `/info/${user.title}/`,\n                title: user.title,\n                description: user['description'],\n            };\n        });\n\n        source.push((form));\n    })\n    .catch(err => {\n        console.log(err)\n    });\n\n\nconst initialState = { isLoading: false, results: [], value: '', load: false }\n\n\n\nclass SearchMenu extends Component {\n\n\n    state = initialState\n\n\n\n    handleResultSelect = (e, { result }) => {\n        window.location.href = 'http://covid19-informatics.com/info/' + result.title\n    }\n\n    handleSearchChange = (e, { value }) => {\n\n        this.setState({ isLoading: true, value, load: false })\n\n        setTimeout(() => {\n            if (this.state.value.length < 1) return this.setState(initialState)\n\n            const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n            const isMatch = (result) => re.test(result.title)\n\n            this.setState({\n                isLoading: false,\n                results: _.filter(source[0], isMatch),\n            })\n        }, 300)\n\n    }\n\n    render() {\n        const { isLoading, value, results, load } = this.state\n\n\n        return (\n\n\n            <div>\n                <Search\n                    size='small'\n                    placeholder={\"Search for countries\"}\n                    loading={isLoading}\n                    onResultSelect={this.handleResultSelect}\n                    // onMouseDown={this.mousedown}\n                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                        leading: true,\n                    })}\n                    results={results}\n                    value={value}\n                    {...this.props}\n                />\n            </div>\n\n        )\n\n\n\n    }\n}\n\nexport default SearchMenu;","import React, { Component } from 'react';\n\nimport { Input, Menu } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\";\nimport SearchMenu from \"./search\";\nimport \"./css/navigation.css\";\n\n\nclass Navigation extends Component {\n    state = { activeItem: 'home' }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n    render() {\n\n        const { activeItem } = this.state\n\n        return (\n\n            <div className=\"menu-wrapper\">\n\n\n                <Menu fluid stackable className=\"menu\" size=\"large\" stackable color=\"black\" inverted>\n\n                    <Menu.Item\n                        as={Link} to=\"/\"\n                        name='Home'\n                        active={activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        as={Link} to=\"/countries\"\n                        name='Countries'\n                        active={activeItem === 'countries'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        as={Link} to=\"/simulation\"\n                        name='Simulations'\n                        active={activeItem === 'Simulations'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Item\n                        as={Link} to=\"/about\"\n                        name='About'\n                        active={activeItem === 'about'}\n                        onClick={this.handleItemClick}\n                    />\n                    <Menu.Menu position='right'>\n                        <Menu.Item>\n                            {/* <Input icon='search' placeholder='Search...' /> */}\n                            <SearchMenu ></SearchMenu>\n                        </Menu.Item>\n                    </Menu.Menu>\n                </Menu>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Navigation;","\nimport React, { useRef, useEffect } from 'react';\nimport { select, geoPath } from \"d3\";\nimport d1 from \"./data/dataTheodoTravels2015.json\";\nimport \"./css/test.css\";\nimport * as topojson from 'topojson'\nimport * as d3 from 'd3';\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { Grid, Table, Icon, Button } from \"semantic-ui-react\"\nimport d2 from \"./data/data.json\";\n//function GeoChart(){}\nfunction GeoChart(props) {\n\n    var all_cases;\n    var country_cases;\n\n    const country_data = props.data_all;\n\n    const svgRef = useRef();\n    const wrapperRef = useRef();\n\n    var countriesValues, mostVisited;\n    mostVisited = 0;\n    var vals = [];\n    countriesValues = d1;\n    for (var country in countriesValues) {\n        const current = parseInt(countriesValues[country])\n        vals.push(current)\n        if (mostVisited < current) {\n            mostVisited = current;\n        }\n    }\n\n\n    const locations = {}\n\n    const world = d2;\n    const data = world.objects.countries.geometries;\n    for (var i = 0; i < data.length; i++) {\n        const name = data[i].properties.name;\n        locations[name] = data[i].properties.location;\n    }\n\n\n\n\n\n    var locations2 = []\n\n\n    for (var i = 0; i < data.length; i++) {\n        locations2.push(data[i].properties.location)\n    }\n\n\n    var countries = topojson.feature(world, world.objects.countries);\n\n    // We group the countries in contients (We removed Antarctica and we put oceania with Asia)\n    var asia = { type: \"FeatureCollection\", name: \"Asia and Oceania\", id: 1, features: countries.features.filter(function (d) { return d.properties.continent == \"Asia and Oceania\"; }) };\n    var africa = { type: \"FeatureCollection\", name: \"Africa\", id: 2, features: countries.features.filter(function (d) { return d.properties.continent == \"Africa\"; }) };\n    var europe = { type: \"FeatureCollection\", name: \"Europe\", id: 3, features: countries.features.filter(function (d) { return d.properties.continent == \"Europe\"; }) };\n    var na = { type: \"FeatureCollection\", name: \"North America\", id: 4, features: countries.features.filter(function (d) { return d.properties.continent == \"North America\"; }) };\n    var sa = { type: \"FeatureCollection\", name: \"South America\", id: 5, features: countries.features.filter(function (d) { return d.properties.continent == \"South America\"; }) };\n\n    var continents = [asia, africa, europe, na, sa];\n    var changeFocus, previousTransformation, worldScaleFactor, worldmapBBox, worldmapBBoxOffsetX, worldmapBBoxOffsetY, translateX, translateY;\n    // There are 3 levels of zoom: \"world, continent and country\"\n    var current = '';\n    var worldDefaultTransformation = undefined;\n    var c = \"/info/World\";\n\n\n\n    useEffect(() => {\n        if (props.data_all[\"USA\"] != undefined) {\n\n            const svg = select(svgRef.current)\n                .attr(\"width\", \"100%\")\n                .attr(\"height\", \"100%\");\n\n            // const { width, height } =\n            //     dimensions || wrapperRef.current.getBoundingClientRect();\n            var\n                container = document.getElementById(\"map-container\"),\n                width = container.clientWidth,\n                height = container.clientHeight;\n            var projection = d3.geoNaturalEarth1();\n            const path = geoPath().projection(projection);\n\n            // const group = svg;\n            var group = svg.append(\"g\")\n                .attr(\"width\", \"100%\")\n                .attr(\"height\", \"100%\")\n            var selectedCountry;\n\n            const fitWorld = function () {\n                if (worldDefaultTransformation == undefined) {\n                    group.attr(\"transform\", function () {\n                        worldmapBBox = this.getBBox();\n                        worldScaleFactor = Math.min(height / worldmapBBox.height, width / worldmapBBox.width);\n                        worldmapBBoxOffsetX = 0.5 * width - worldScaleFactor * (worldmapBBox.x + 0.5 * worldmapBBox.width);\n                        worldmapBBoxOffsetY = 0.5 * height - worldScaleFactor * (worldmapBBox.y + 0.5 * worldmapBBox.height);\n                        worldDefaultTransformation = \"translate(\" + worldmapBBoxOffsetX + \",\" + worldmapBBoxOffsetY + \") scale(\" + worldScaleFactor + \")\";\n                        return worldDefaultTransformation;\n                    });\n                } else {\n                    group.transition().attr(\"transform\", worldDefaultTransformation);\n                }\n            };\n\n            const zoomContinentToWorld = function () {\n                focusLevel = \"world\";\n                group.selectAll(\".continent\").transition().duration(200).attr(\"transform\", \"\")\n                    .on(\"end\", function (d) {\n                        group.selectAll(\".continent\").attr(\"class\", function (d) {\n                            return 'continent';\n                        });\n                    });\n            };\n\n\n\n            const zoomContinentToCountry = function (clickedCountry) {\n                focusLevel = \"country\";\n                selectedCountry = clickedCountry;\n                c = clickedCountry.properties.name;\n                group.selectAll(\".country\").filter(function (d) {\n                    if (d !== clickedCountry) {\n                        return d;\n                    }\n                }).attr(\"class\", \"country faded\");\n                previousTransformation = group.select(\".continent.focused\").attr(\"transform\");\n                group.selectAll(\".continent\").transition().duration(300).attr(\"transform\", \"\");\n                return group.selectAll(\".country\").filter(function (d) {\n                    if (d === clickedCountry) {\n                        return d;\n                    }\n                }).attr(\"class\", function (d) {\n                    return 'country focused';\n                }).transition().duration(600).attr(\"transform\", function () {\n                    var bBox, miniCountryOffsetX, miniCountryOffsetY, miniCountryScale, targetSize;\n                    bBox = this.getBBox();\n                    targetSize = Math.min(width / 1.3, height / 1.3);\n                    miniCountryScale = Math.min(targetSize / bBox.width, targetSize / bBox.height);\n                    miniCountryOffsetX = -bBox.x * miniCountryScale + 40;\n                    miniCountryOffsetY = -bBox.y * miniCountryScale + 40;\n                    return \"translate(\" + miniCountryOffsetX + \",\" + miniCountryOffsetY + \") scale(\" + miniCountryScale + \")\";\n                }).on(\"end\", function () {\n                    document.getElementById(\"country-details\").className = \"\";\n                    document.getElementById(\"description\").className = \"\";\n                    document.getElementById(\"legend1\").className = \"faded\"\n                    document.getElementById(\"map-country-header\").textContent = \"More Info on \" + clickedCountry.properties.name;\n                    document.getElementById(\"map-country-header\").href = 'https://covid19-informatics.herokuapp.com/info/' + clickedCountry.properties.name;\n\n                    document.getElementById(\"table-header\").textContent = clickedCountry.properties.name;\n                    try {\n\n\n                        document.getElementById(\"table-deaths\").textContent = country_data[clickedCountry.properties.name]['deaths'];\n                        document.getElementById(\"table-recovered\").textContent = country_data[clickedCountry.properties.name]['recovered'];\n                        document.getElementById(\"table-cases\").textContent = country_data[clickedCountry.properties.name]['cases'];\n                    } catch (err) {\n\n                        document.getElementById(\"map-country-header\").textContent = \"No Info on \" + clickedCountry.properties.name;\n                        document.getElementById(\"map-country-header\").href = '/';\n\n                        document.getElementById(\"table-deaths\").textContent = \"no info\";\n                        document.getElementById(\"table-recovered\").textContent = \"no info\";\n                        document.getElementById(\"table-cases\").textContent = \"no info\";\n\n                    }\n                    document.getElementById(\"country-name\").textContent =\n                        clickedCountry.properties.name + ' ' + country_data[clickedCountry.properties.name]['cases'];\n\n                });\n            };\n\n            const zoomCountryToContinent = function () {\n                // document.getElementById(\"svg\").className = \"\";\n                document.getElementById(\"legend1\").className = \"\"\n                document.getElementById(\"country-details\").className = \"faded\";\n                document.getElementById(\"description\").className = \"faded\";\n                focusLevel = \"continent\";\n                group.selectAll(\".country\").attr(\"class\", function (d) {\n                    return 'country';\n                });\n                group.selectAll(\".country\").filter(function (d) {\n                    if (d === selectedCountry) {\n                        return d;\n                    }\n                }).transition().attr(\"transform\", \"\");\n                group.select(\".continent.focused\").transition().delay(50).duration(200).attr(\"transform\", previousTransformation);\n            };\n\n            const zoomWorldToContinent = function (clickedCountry) {\n                group.transition().attr(\"transform\", \"\");\n                translateX = null;\n                translateY = null;\n                focusLevel = \"continent\";\n                continent = clickedCountry.properties.continent;\n                group.selectAll(\".continent\").filter(function (d) {\n                    if (d.name !== continent) {\n                        return d;\n                    }\n                }).attr(\"class\", function () {\n                    return this.className.animVal + \" unfocused\";\n                });\n                group.selectAll(\".continent\").filter(function (d) {\n                    if (d.name === continent) {\n                        return d;\n                    }\n                }).attr(\"class\", \"continent focused\").transition().duration(400).attr(\"transform\", function () {\n                    var bBox, scaleFactor;\n                    bBox = this.getBBox();\n                    scaleFactor = Math.min(width / bBox.width, height / bBox.height);\n                    translateX = 0.5 * width - scaleFactor * (bBox.x + 0.5 * bBox.width);\n                    translateY = 0.5 * height - scaleFactor * (bBox.y + 0.5 * bBox.height);\n                    return \"translate(\" + translateX + \",\" + translateY + \") scale(\" + scaleFactor + \")\";\n                });\n                group.selectAll(\".country\").attr(\"class\", function (d) {\n                    return 'country';\n                });\n            };\n\n            var focusLevel = \"world\";\n\n            const changeFocus = function (clickedCountry) {\n                if (clickedCountry != null) {\n                    if (focusLevel == \"world\") {\n                        zoomWorldToContinent(clickedCountry);\n                    } else if (focusLevel == \"continent\") {\n                        zoomContinentToCountry(clickedCountry);\n                    }\n                } else if (clickedCountry == null) {\n                    if (focusLevel == \"country\") {\n                        zoomCountryToContinent();\n                    } else if (focusLevel == \"continent\") {\n                        fitWorld();\n                        zoomContinentToWorld();\n                    }\n                }\n            };\n\n            const baseValue = 120;\n            const remainder = 255 - baseValue;\n\n            const colorScheme = d3.interpolatePuBu;\n            const colorScale = d3.scaleSqrt().domain([0, Math.log10(country_data['casesMax'])]);\n\n\n\n            const tooltip = function (country, c) {\n\n\n                // console.log(\"clicked\")\n            }\n\n\n\n\n\n            //!!!!!\n            // We draw the continents here\n            //!!!!!\n\n            const mouseAction = function (clickedCountry) {\n                if (focusLevel != 'country') {\n                    document.getElementById(\"map-country-header\").textContent = clickedCountry.properties.name\n                }\n            }\n            group.selectAll(\".continent\").data(continents).enter().call(function (d) {\n                return d.append(\"g\").attr('class', function (d) {\n                    return 'continent ' + d.name.replace(' ', '');\n                }).selectAll(\".country\").data(function (d) {\n                    return d.features;\n                }).enter().insert(\"path\").attr(\"class\", \"country\")\n                    .attr(\"fill\", function (d) {\n\n                        try {\n                            const country = country_data[d.properties.name];\n\n                            const value = Math.log10(country['cases']);\n                            return colorScheme(colorScale(value));\n\n                        }\n                        catch (err) {\n\n                            return \"rgb(211, 211, 211)\";\n\n                        }\n\n                    }).attr(\"d\", path).attr(\"id\", function (d) {\n                        return d.id;\n                    }).attr(\"stroke\", \"white\")\n                    .attr(\"stroke-width\", 0.6)\n                    .on(\"mouseover\", function (d) {\n                        mouseAction(d);\n                        return tooltip(d.properties.name, d3.geoCentroid(d))\n                    })\n                    .on(\"click\", function (d) {\n                        changeFocus(d);\n                        d3.event.stopPropagation();\n                    });\n            });\n\n            // We here draw some attributes of continents, here we simply display the name\n            var continent, continentBBox, i, len;\n            for (i = 0, len = continents.length; i < len; i++) {\n                continent = continents[i];\n                continentBBox = null;\n                group.selectAll(\".continent\").filter(function (d) {\n                    if (d.name === continent.name) {\n                        continentBBox = this.getBBox();\n                        return d;\n                    }\n                }).append(\"text\").attr(\"class\", \"continent-name\").text(function (d) {\n                    return d.name;\n                }).attr(\"transform\", function () {\n                    var textOffsetX, textOffsetY;\n                    textOffsetX = continentBBox.x + continentBBox.width / 2;\n                    textOffsetY = continentBBox.y + continentBBox.height / 2;\n                    return \"translate(\" + textOffsetX + \",\" + textOffsetY + \")\";\n                });\n            }\n\n            // We catch the click\n            d3.select(\"body\").on(\"click\", function () {\n                changeFocus();\n                d3.event.stopPropagation();\n            });\n\n            // We scale the map to fit the #map-container div\n            fitWorld();\n\n\n            var w = 20, h = 300;\n\n            var key = d3.select(\"#legend1\")\n                .append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n\n            var legend = key.append(\"defs\")\n                .append(\"svg:linearGradient\")\n                .attr(\"id\", \"gradient\")\n                .attr(\"x1\", \"0%\")\n                .attr(\"y1\", \"100%\")\n                .attr(\"x2\", \"100%\")\n                .attr(\"y2\", \"100%\")\n                .attr(\"spreadMethod\", \"pad\");\n\n            legend.append(\"stop\")\n                .attr(\"offset\", \"0%\")\n                .attr(\"stop-color\", \"#f7fcf0\")\n                .attr(\"stop-opacity\", 1);\n\n            legend.append(\"stop\")\n                .attr(\"offset\", \"33%\")\n                .attr(\"stop-color\", \"#7fdae1\")\n                .attr(\"stop-opacity\", 1);\n\n            legend.append(\"stop\")\n                .attr(\"offset\", \"66%\")\n                .attr(\"stop-color\", \"#7bccc4\")\n                .attr(\"stop-opacity\", 1);\n\n            legend.append(\"stop\")\n                .attr(\"offset\", \"100%\")\n                .attr(\"stop-color\", \"#084081\")\n                .attr(\"stop-opacity\", 1);\n\n            key.append(\"rect\")\n                .attr(\"width\", h)\n                .attr(\"height\", w)\n                .style(\"fill\", \"url(#gradient)\")\n                .attr(\"transform\", \"translate(0,10)\")\n                .attr(\"transform\", \"rotate(90)\");\n\n            var y = d3.scaleLinear()\n                .range([300, 0])\n                .domain([country_data['casesMax'], 0]);\n\n            var yAxis = d3.axisBottom()\n                .scale(y)\n                .ticks(5);\n\n            key.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .attr(\"transform\", \"translate(0,10)\")\n                .attr(\"transform\", \"rotate(90)\")\n                .call(yAxis)\n                .append(\"text\")\n                .attr(\"y\", 0)\n                .attr(\"dy\", \".71em\")\n                .style(\"text-anchor\", \"end\")\n                .text(\"axis title\");\n        }\n\n\n\n\n    }, [props.data_all]);\n\n\n\n\n    return (\n\n        <Grid centered>\n            <Grid.Row id='tool' textAlign=\"center\">\n                <Button size='huge' basic color=\"blue\" id=\"map-country-header\"> World </Button>\n            </Grid.Row>\n\n            <div id=\"map-container\" ref={wrapperRef} >\n                <Grid.Row >\n                    <svg id='svg' ref={svgRef}>\n\n                    </svg>\n\n                    <div id=\"legend1\" className=\"\"></div>\n\n                </Grid.Row>\n                <Grid.Row>\n                    <div id='country-details'>\n                        <div id='description' className='faded'>\n                            <Table className='country-table' textAlign=\"center\" color='black' celled striped>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell className='table-cell' id='table-header' colSpan='3'>Git Repository</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell className='table-cell' collapsing>\n                                            <Icon name='arrow circle up' /> Total Cases</Table.Cell>\n                                        <Table.Cell className='table-cell' id='table-cases'></Table.Cell>\n\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell className='table-cell'>\n                                            <Icon color='green' name='arrow circle down' /> Recovered </Table.Cell>\n                                        <Table.Cell className='table-cell' id='table-recovered'></Table.Cell>\n\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell className='table-cell'>\n                                            <Icon color=\"red\" name='plus square' /> Deaths </Table.Cell>\n                                        <Table.Cell className='table-cell' id='table-deaths'></Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n\n                            </Table>\n                        </div>\n                    </div>\n\n                </Grid.Row>\n\n            </div>\n        </Grid >);\n\n\n\n}\n\n\n\nexport default GeoChart","import React, { Component } from 'react';\n\nimport axios from 'axios';\nimport Navigation from \"./navigation\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid, Message } from 'semantic-ui-react'\nimport GeoChart from './geochart';\nimport CountUp from 'react-countup';\nimport \"./css/homepage.css\";\n\n\nclass Homepage extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data_all: [],\n            overall: [],\n            recovered: 1,\n            cases: 1,\n            deaths: 1,\n\n        }\n\n    }\n\n\n    componentDidMount() {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n        axios\n            .get(\"http://127.0.0.1:8000/api/get/data/\",\n                config)\n            .then(res => {\n                const datum = res.data\n                console.log(datum)\n                this.setState({ data_all: datum })\n            })\n            .catch(err => {\n                console.log(\"error\")\n            });\n\n        axios\n            .get(\"http://127.0.0.1:8000/api/get/all/\",\n                config)\n            .then(res => {\n                const datum = res.data\n                this.setState({\n                    overall: datum, cases: datum['cases'],\n                    deaths: datum['deaths'],\n                    recovered: datum['recovered']\n\n                })\n            })\n            .catch(err => {\n                console.log(\"error\")\n            });\n\n\n\n    }\n\n    render() {\n\n        const elements = [];\n        const ov = this.state.overall;\n        const data = this.state.data_all;\n        const deaths = (<CountUp className='countup' delay={1} end={this.state.deaths} />);\n\n        const cases = (<CountUp className='countup' delay={1} end={this.state.cases} />);\n        const recoveries = (<CountUp className='countup' delay={1} end={this.state.recovered} />)\n\n        return (\n\n            <div className=\"all-wrapper\">\n\n                <Navigation />\n\n                <div className=\"homepage-row\">\n\n\n                    <Grid stackable centered>\n\n                        <Grid.Row className=\"top-row\" >\n                            <h1> Covid-19 World Project </h1>\n                        </Grid.Row>\n                        <Grid.Row className=\"bottom-row\" columns={3}>\n                            <Grid.Column textAlign=\"center\">\n                                <Message\n                                    size=\"small\"\n                                    color=\"blue\"\n                                    className=\"stat-message\"\n                                    icon='chart line'\n                                    header='Cases'\n                                    content={cases}\n                                />\n                                {/* <CountUp className='countup' prefix=\"Cases: \" delay={1} end={this.state.cases} /> */}\n\n                            </Grid.Column >\n                            <Grid.Column textAlign=\"center\" >\n                                <Message\n                                    size=\"small\"\n                                    color=\"blue\"\n\n                                    className=\"stat-message\"\n                                    icon='heartbeat'\n                                    header='Recovered'\n                                    content={recoveries}\n\n                                ></Message>\n                                {/* <CountUp className='countup' prefix=\"Recovered: \" delay={1} end={this.state.recovered} /> */}\n                            </Grid.Column>\n                            <Grid.Column textAlign=\"center\" >\n                                <Message\n                                    size=\"small\"\n                                    color=\"blue\"\n                                    className=\"stat-message\"\n                                    icon='plus square'\n                                    header='Deaths'\n                                    content={deaths}\n\n                                />\n                                {/* <CountUp className='countup' prefix=\"Deaths: \" delay={1} end={this.state.deaths} /> */}\n\n                            </Grid.Column>\n\n                        </Grid.Row>\n                    </Grid>\n                </div>\n                <div className=\"more-info\">\n\n                    <Message color='blue' className='message' size='medium'>\n                        <Message.Header className=\"message-header\">Map Usage</Message.Header>\n                        <Message.List>\n                            <Message.Item>Click on a continent to zoom on continent</Message.Item>\n                            <Message.Item>Click on a country to view country stats</Message.Item>\n                            <Message.Item>Click on the more-info button once it appears to view dedicated country statistics page </Message.Item>\n                        </Message.List>\n                    </Message>\n\n                </div>\n\n                <GeoChart data_all={this.state.data_all}></GeoChart>\n\n\n\n            </div >\n\n        );\n    }\n}\n\nexport default Homepage;","import React, { Component } from 'react';\nimport { Dropdown, Table } from \"semantic-ui-react\"\nimport axios from 'axios';\nimport \"./css/countries.css\";\nimport Navigation from \"./navigation\";\nimport _ from 'lodash'\nimport { Link } from \"react-router-dom\";\n\n\n\n\nconst options = [\n    { text: 'Overall Statistics', value: 'Overall' },\n    { text: 'Today Statistics', value: 'Today' },\n    { text: 'Per Million Statistics', value: 'Per Million' },\n]\nclass Countries extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            column: null,\n            direction: null,\n            value: \"Overall\",\n            option: \"Overall Statistics\",\n        }\n    }\n    componentDidMount() {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n        axios\n            .get(\"http://127.0.0.1:8000/api/get/countries/\",\n                config)\n            .then(res => {\n                const datum = res.data\n                this.setState({ data: datum })\n            })\n            .catch(err => {\n                console.log(\"error\")\n            });\n\n    }\n    handleSort = (clickedColumn) => () => {\n        const { column, data, direction } = this.state\n\n        if (column !== clickedColumn) {\n            this.setState({\n                column: clickedColumn,\n                data: _.sortBy(data, [clickedColumn]),\n                direction: 'descending',\n            })\n\n            return\n        }\n        this.setState({\n            data: data.reverse(),\n            direction: direction === 'ascending' ? 'descending' : 'ascending',\n        })\n    }\n\n    onChange(e, data) {\n        this.setState({ value: data.value, option: data.text });\n    }\n\n\n\n\n    render() {\n        const { column, data, direction, value } = this.state\n\n\n        const elements = [];\n        const million_stats = [];\n        const today_stats = []\n        const table_header = [];\n        const table_body = [];\n\n        const header1 = (\n            <Table.Header className=\"table-head\">\n                <Table.Row className=\"table-row\">\n                    <Table.HeaderCell sorted={column === 'country' ? direction : null}\n                        onClick={this.handleSort('country')} width={3} >Country</Table.HeaderCell>\n                    <Table.HeaderCell sorted={column === 'cases' ? direction : null}\n                        onClick={this.handleSort('cases')}\n                        width={3}> Cases</Table.HeaderCell>\n                    <Table.HeaderCell sorted={column === 'active' ? direction : null}\n                        onClick={this.handleSort('active')}\n                        width={3}> Active Cases</Table.HeaderCell>\n                    <Table.HeaderCell sorted={column === 'recovered' ? direction : null}\n                        onClick={this.handleSort('recovered')}\n                        width={3}> Recoveries</Table.HeaderCell>\n                    <Table.HeaderCell sorted={column === 'deaths' ? direction : null}\n                        onClick={this.handleSort('deaths')} width={3}> Deaths</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n        );\n\n        const header2 = (\n            <Table.Header className=\"table-head\">\n                <Table.Row className=\"table-row\">\n                    <Table.HeaderCell sorted={column === 'country' ? direction : null}\n                        onClick={this.handleSort('country')} width={3} >Country</Table.HeaderCell>\n                    <Table.HeaderCell sorted={column === 'casesPerOneMillion' ? direction : null}\n                        onClick={this.handleSort('casesPerOneMillion')}\n                        width={3}> Cases</Table.HeaderCell>\n\n                    <Table.HeaderCell sorted={column === 'deathsPerOneMillion' ? direction : null}\n                        onClick={this.handleSort('deathsPerOneMillion')}\n                        width={3}> Recoveries</Table.HeaderCell>\n                    <Table.HeaderCell sorted={column === 'testsPerOneMillion' ? direction : null}\n                        onClick={this.handleSort('testsPerOneMillion')} width={3}> Deaths</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header >\n\n        );\n        const header3 = (\n            <Table.Header className=\"table-head\">\n                <Table.Row className=\"table-row\">\n                    <Table.HeaderCell sorted={column === 'country' ? direction : null}\n                        onClick={this.handleSort('country')} width={3} >Country</Table.HeaderCell>\n                    <Table.HeaderCell sorted={column === 'todayCases' ? direction : null}\n                        onClick={this.handleSort('todayCases')}\n                        width={3}> Cases</Table.HeaderCell>\n\n                    <Table.HeaderCell sorted={column === 'todayDeaths' ? direction : null}\n                        onClick={this.handleSort('todayDeaths')}\n                        width={3}> Recoveries</Table.HeaderCell>\n\n                </Table.Row>\n            </Table.Header >\n\n        );\n        for (var i = 0; i < data.length; i++) {\n            const perMillion = (\n                <Table.Row className=\"table-row\">\n\n                    <Table.Cell textAlign=\"center\" id='row-1' width={3}><Link to={'/info/' + data[i]['country']}> {data[i]['country']}</Link> </Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-2' width={3}>{data[i]['casesPerOneMillion']}</Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-3' width={3}>{data[i]['deathsPerOneMillion']}</Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-4' width={3}> {data[i]['testsPerOneMillion']}</Table.Cell>\n                </Table.Row >\n\n            )\n            const today = (\n                <Table.Row className=\"table-row\">\n                    <Table.Cell textAlign=\"center\" id='row-1' width={3}> <Link to={'/info/' + data[i]['country']}> {data[i]['country']}</Link>  </Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-2' width={3}>{data[i]['todayCases']}</Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-3' width={3}>{data[i]['todayDeaths']}</Table.Cell>\n                </Table.Row >\n\n            )\n            const el = (\n                <Table.Row className=\"table-row\">\n                    <Table.Cell textAlign=\"center\" id='row-1' width={3}> <Link to={'/info/' + data[i]['country']}> {data[i]['country']}</Link>  </Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-2' width={3}>{data[i]['cases']}</Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-3' width={3}>{data[i]['active']}</Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-4' width={3}> {data[i]['recovered']}</Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-5' width={3}>{data[i]['deaths']}</Table.Cell>\n                </Table.Row >\n            )\n            elements.push(el);\n            million_stats.push(perMillion);\n            today_stats.push(today);\n        }\n\n        if (value == \"Overall\") {\n            table_header.push(header1);\n            table_body.push(elements);\n        } else if (value == \"Per Million\") {\n            table_header.push(header2);\n            table_body.push(million_stats);\n        } else {\n            table_header.push(header3);\n            table_body.push(today_stats);\n        }\n\n\n\n\n        return (<div>\n            <Navigation>\n\n            </Navigation>\n\n            <div className=\"dropdown-wrapper\">\n                <Dropdown button\n                    className='icon'\n                    floating\n                    labeled text={this.state.value}\n                    options={options}\n                    onChange={this.onChange.bind(this)}>\n                </Dropdown>\n            </div>\n\n\n\n\n            <div className=\"table-wrapper\">\n\n\n                <Table striped singleLine  >\n                    {table_header}\n                    <Table.Body className=\"table-body\">\n\n\n                        {table_body}\n\n\n\n\n                    </Table.Body>\n\n                </Table>\n\n            </div>\n\n\n\n        </div>);\n    }\n}\n\nexport default Countries;","import React, { Component } from 'react';\nimport Navigation from \"./navigation\"\nimport axios from 'axios';\nimport { Pie, Polar } from 'react-chartjs-2';\nimport { Grid, Table, Dropdown, Message, Segment, Progress, Button } from \"semantic-ui-react\";\nimport CountUp from 'react-countup';\nimport \"./css/countryview.css\";\nimport { Link } from \"react-router-dom\";\n\n\n// Per Capita death rate, recovery rate, infection rate\n\n// Postman\n\nconst options = [\n    { text: 'Overall Statistics', value: 'Overall Statistics' },\n    { text: 'Per Million Statistics', value: 'Per Million Statistics' },\n]\nclass Country extends Component {\n    constructor() {\n        super();\n        this.state = {\n            countries: [],\n            data: [],\n            todayDeaths: '0',\n            todayCases: '0',\n            cases: '0',\n            recovered: 1,\n            active: 1,\n            cases: 1,\n            deaths: 1,\n            critical: \"0\",\n            casesPerOneMillion: 1,\n            deathsPerOneMillion: 1,\n            totalTests: 1,\n            testsPerOneMillion: 1,\n            value: \"Overall Statistics\"\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            match: { params }\n        } = this.props;\n\n        console.log(params.country)\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n        axios\n            .get(`https://coronavirus-19-api.herokuapp.com/countries/${params.country}`,\n                config)\n            .then(res => {\n                const datum = res.data\n                this.setState({\n                    data: datum,\n                    todayDeaths: datum[\"todayDeaths\"],\n                    todayCases: datum['todayCases'],\n                    cases: datum['cases'],\n                    recovered: datum['recovered'],\n                    active: datum['active'],\n                    deaths: datum['deaths'],\n                    critical: datum['critical'],\n                    casesPerOneMillion: datum['casesPerOneMillion'],\n                    deathsPerOneMillion: datum['deathsPerOneMillion'],\n                    totalTests: datum['totalTests'],\n                    testsPerOneMillion: datum['testsPerOneMillion'],\n\n                })\n            })\n            .catch(err => {\n                console.log(\"error\")\n            });\n\n        axios\n            .get(\"http://127.0.0.1:8000/api/get/countries/\",\n                config)\n            .then(res => {\n                const datum = res.data\n                this.setState({ countries: datum })\n            })\n            .catch(err => {\n                console.log(\"error\")\n            });\n\n\n\n\n    }\n\n    onChange(e, data) {\n        this.setState({ value: data.value, option: data.text });\n    }\n\n\n\n    render() {\n        const data = {\n            labels: [\"Active\", \"Deaths\", \"Recoveries\"],\n            datasets: [{\n                data: [this.state.active, this.state.deaths, this.state.recovered],\n                backgroundColor: [\n                    '#1d3557',\n                    '#457b9d',\n                    '#a8dadc'\n                ],\n                hoverBackgroundColor: [\n                    '#001233',\n                    '#001233',\n                    '#001233'\n                ]\n            }]\n        };\n\n        const value = this.state.value;\n\n        const header = [];\n        const body = [];\n        const datum = this.state.countries\n        const recovery_rate = Math.round((this.state.recovered / (this.state.cases)) * 100)\n        const death_rate = Math.round((this.state.deaths / (this.state.cases)) * 100)\n        const table_side = [];\n\n        for (var i = 0; i < datum.length; i++) {\n            const table_row = (\n                <Table.Row className=\"table-row\">\n                    <Table.Cell textAlign=\"center\" id='row-2' width={3}>{datum[i]['cases']}</Table.Cell>\n                    <Table.Cell textAlign=\"center\" id='row-1' width={3}><a href={'/info/' + datum[i]['country']}><h3>{datum[i]['country']} </h3></a> </Table.Cell>\n                </Table.Row >\n\n            )\n            table_side.push(table_row)\n        }\n\n        console.log(table_side)\n\n        const header1 = (\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell width={2} />\n                    <Table.HeaderCell width={2}> Quantity (PerMillion)</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n        )\n\n        const header2 = (\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell width={2} />\n                    <Table.HeaderCell width={2}> Quantity </Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n        )\n\n\n        const table_body1 = (\n            <Table.Body >\n                <Table.Row >\n                    <Table.Cell>Cases</Table.Cell>\n                    <Table.Cell >{this.state.casesPerOneMillion}</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                    <Table.Cell>Deaths</Table.Cell>\n                    <Table.Cell>{this.state.deathsPerOneMillion}</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                    <Table.Cell>Tests</Table.Cell>\n                    <Table.Cell>{this.state.testsPerOneMillion}</Table.Cell>\n                </Table.Row>\n            </Table.Body>\n\n        )\n\n        const table_body2 = (\n            <Table.Body >\n                <Table.Row >\n                    <Table.Cell>Cases</Table.Cell>\n                    <Table.Cell >{this.state.cases}</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                    <Table.Cell>Deaths</Table.Cell>\n                    <Table.Cell>{this.state.deaths}</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                    <Table.Cell>Active</Table.Cell>\n                    <Table.Cell>{this.state.active}</Table.Cell>\n                </Table.Row>\n\n            </Table.Body>\n        )\n\n        if (value == \"Per Million Statistics\") {\n            header.push(header1);\n            body.push(table_body1);\n        } else {\n            header.push(header2);\n            body.push(table_body2);\n        }\n\n\n\n        const cases = (<CountUp className='countup' delay={1} end={this.state.cases} />);\n\n        const today_deaths = (<CountUp className='countup' delay={1} end={this.state.todayDeaths} />);\n        const today_cases = (<CountUp className='countup' delay={1} end={this.state.todayCases} />)\n        const critical_cases = (this.state.critical != null) ? (<CountUp className='countup' delay={1} end={this.state.critical} />) : <h4>N/A</h4>\n        const recovery_progress = (this.state.recovered != null) ? (<Progress size='large' color='green' percent={recovery_rate} progress />) : (<h4> N/A</h4>)\n        const death_progess = (this.state.deaths != null) ? (<Progress size='large' color='red' percent={death_rate} progress />) : (<h4> N/A</h4>)\n            (<h4> N/A</h4>)\n        const active_cases = (this.state.active != null) ? (<p><CountUp className='count' delay={1} end={this.state.active} /> </p>) : (<h3> N/A</h3>)\n        const active_percentage = (this.state.active != null) ? (<h4>{Math.round((this.state.active / (this.state.cases)) * 100)}%</h4>) : (<h3> N/A</h3>)\n        const tests = (this.state.totalTests != null) ? (<p className='total-tests'> <CountUp className='count' delay={1} end={this.state.totalTests} /></p>) : (<h4>N/A</h4>)\n\n\n        return (<div>\n\n            <Navigation>\n            </Navigation>\n\n\n            <div className=\"content-wrapper\">\n\n                <div className='left'>\n                    <Table singleLine>\n\n                        <Table.Body className=\"table-body\">\n                            {table_side}\n                        </Table.Body>\n\n                    </Table>\n                </div>\n\n                <div className=\"right-column\">\n\n\n\n                    <Segment>\n\n\n\n                        <Grid stackable centered>\n\n\n                            <Grid.Column></Grid.Column>\n                            <Grid.Row className='header-row'  >\n                                <h1> {this.state.data['country']} </h1>\n                            </Grid.Row>\n\n\n                            <Grid.Row className='row-stat' columns={4}>\n                                <Grid.Column width={4} textAlign=\"center\">\n                                    <Message\n                                        size=\"small\"\n                                        // color=\"blue\"\n\n                                        className=\"stat-message\"\n                                        icon='chart line'\n                                        header='Cases'\n                                        content={cases}\n\n                                    ></Message>\n                                </Grid.Column >\n                                <Grid.Column width={4} textAlign=\"center\" >\n                                    <Message\n                                        size=\"small\"\n                                        // color=\"blue\"\n                                        className=\"stat-message\"\n                                        icon='ambulance'\n                                        header='Critical Cases'\n                                        content={critical_cases}\n\n                                    ></Message>\n                                </Grid.Column>\n                                <Grid.Column width={4} textAlign=\"center\" >\n                                    <Message\n                                        size=\"small\"\n                                        // color=\"blue\"\n                                        className=\"stat-message\"\n                                        icon='arrow alternate circle up'\n                                        header='Today Cases'\n                                        content={today_cases}\n\n                                    ></Message>\n                                </Grid.Column>\n                                <Grid.Column width={4} textAlign=\"center\" >\n                                    <Message\n                                        size=\"small\"\n                                        // color=\"blue\"\n                                        className=\"stat-message\"\n                                        icon='plus square'\n                                        header='Today Deaths'\n                                        content={today_deaths}\n\n                                    ></Message>\n                                </Grid.Column>\n\n\n\n                            </Grid.Row>\n\n\n                            <Grid.Row>\n\n                                <Grid.Column width={5}>\n\n                                    <Segment id='segment'  >\n                                        <h3> Current Recovery %:</h3>\n                                        <p> {recovery_progress}</p>\n\n                                    </Segment>\n                                    <Segment id='segment'  >\n                                        <h3> Current Death %:</h3>\n                                        <p> {death_progess}</p>\n\n                                    </Segment>\n\n\n                                </Grid.Column >\n                                <Grid.Column width={3}>\n\n\n                                    <Segment id='segment-2'  >\n\n                                        <h4>Active %: </h4>\n                                        {active_percentage}\n                                    </Segment>\n                                    <Segment id='segment-2'  >\n                                        <h4>Active Cases </h4>\n                                        {active_cases}\n\n                                    </Segment>\n                                    {/* <Segment id='segment-2'  >\n                                        <h4> Active Cases:</h4>\n                                        {active_cases}\n                                    </Segment> */}\n\n                                    <Segment id='segment-2'  >\n                                        <h4>Total Tests:</h4>\n                                        {tests}\n                                    </Segment>\n                                    {/* </Segment.Group> */}\n                                </Grid.Column >\n\n                                <Grid.Column className=\"stat-column-1\" width={8}>\n\n                                    <Segment id='segment-table'>\n                                        <div className=\"dropdown-wrapper\">\n                                            <Dropdown button\n                                                className='icon'\n                                                floating\n                                                labeled text={this.state.value}\n                                                options={options}\n                                                onChange={this.onChange.bind(this)}>\n                                            </Dropdown>\n                                        </div>\n                                        <Table striped size='medium' className='table-stat' textAlign='center' >\n                                            {header}\n\n                                            {body}\n                                        </Table>\n                                    </Segment>\n                                </Grid.Column>\n                            </Grid.Row>\n\n                            <Grid.Row>\n\n\n                                <Grid.Column width={8}>\n                                    <Segment id='segment-chart'>\n                                        <Pie data={data}></Pie>\n                                    </Segment>\n                                </Grid.Column>\n\n                                <Grid.Column width={8}>\n                                    <Segment id='segment-link'>\n                                        <Button color='blue' href='https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public'> Corona Virus Prevention </Button>\n                                    </Segment>\n                                    <Segment id='segment-link'>\n                                        <Button color='blue' href='https://coronavirus.jhu.edu/covid-19-basics/understanding-covid-19'> John Hopkins Uni Resource </Button>\n                                    </Segment>\n                                    <Segment id='segment-link'>\n                                        <Button color='blue' href='https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports'> World Health Organization </Button>\n                                    </Segment>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Segment>\n\n                </div>\n            </div>\n\n        </div >);\n    }\n}\n\nexport default Country;","import React, { Component } from 'react';\nimport \"./css/about.css\";\nimport { Message, Button } from 'semantic-ui-react'\n\nimport Navigation from \"./navigation\";\n\nclass About extends Component {\n    state = {}\n    render() {\n        const email = 'amean.asad@queensu.ca'\n\n\n        const contribute = (\n            <div className='contribute'>\n                <h3> Contact developer at: <a href={\"mailto:\" + email}>amean.asad@queensu.ca  </a></h3>\n                <p> Feel free to reach out to share ideas, report issues, or to add to this project. </p>\n                <div>\n                    <Button href='https://github.com/AmeanAsad/Covid-19-Tracker' color='black' icon='github' > Github Repo</Button>\n                </div>\n            </div>\n        )\n\n\n        return (\n            <div>\n\n\n                <Navigation>\n                </Navigation>\n                <div className=\"wrapper\">\n\n                    <div className=\"message\">\n\n                        <Message\n                            size=\"huge\"\n                            className=\"about-message\"\n                            icon='map marker'\n                            header='About this project'\n                            content='This project is meant to elegantly present information and statistics\n                        regarding Covid19 on a world-wide scale.\n                        Hopefully there will be more edits to update the project to add more details.'\n                        />\n                    </div>\n\n                    <div className=\"message\">\n                        <Message\n                            size=\"huge\"\n\n                            className=\"about-message\"\n                            icon='handshake'\n                            header='Contribute'\n                            content={contribute}\n                        />\n                    </div>\n\n                    <div className=\"message\">\n                        <Message\n                            size=\"huge\"\n\n                            className=\"about-message\"\n                            icon='chart bar'\n                            header='About the data'\n                            content='The data provided is from taken from the John Hopkins University Resource Center.\n                        Note that this data changes rapidly, therefore the numbers represented are not in real\n                        time but are constrained by the accuracy of the source.'\n                        />\n                    </div>\n                    <div className=\"message\">\n\n\n                        <Message size='huge' className=\"about-message\">\n                            <Message.Header className=\"message-header\">Future Plans</Message.Header>\n                            <Message.List>\n                                <Message.Item>Add a city/province/state statistics for countries</Message.Item>\n                                <Message.Item>Add news updates for countries</Message.Item>\n                                <Message.Item>Add trend line for each country</Message.Item>\n                            </Message.List>\n                        </Message>\n                    </div>\n\n\n\n\n                </div>\n\n            </div>);\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nimport { Grid, Message } from 'semantic-ui-react';\nimport Navigation from \"./navigation\"\nimport \"./css/simulation.css\";\n\nimport Agent1 from \"./simulations/Agent-0.5-7-1.9.mp4\";\nimport Agent2 from \"./simulations/Agent-0.5-14-1.9.mp4\"\nimport Agent3 from \"./simulations/Agent-0.25-7-1.9.mp4\"\nimport Agent4 from \"./simulations/Agent-0.5-7-1.2.mp4\"\n\nimport Sir1 from \"./simulations/SIR-0.5-7-1.9.png\"\nimport Sir2 from \"./simulations/SIR-0.5-14-1.9.png\"\nimport Sir3 from \"./simulations/SIR-0.25-7-1.9.png\"\nimport Sir4 from \"./simulations/SIR-0.5-7-1.2.png\"\n\n\nclass Explore extends Component {\n\n\n\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n\n\n\n\n    }\n\n\n\n    render() {\n\n        const message = (\n            <p>I want to begin with a disclaimer that these simulations are not entirely accurate\n            representation of real life pandemics. No model of the pandemic is 100% accurate, but some\n            are useful to better understand the pandemic. The purpose of the simulations below is to see\n            how certain paramaters such as social distancing, hygiene, masks, etc. have an impact on the\n            spread of disease. Again, by no means is this an accurate representation of pandemic spread. These\n            results are only a simulation under controlled parameters. Yet useful insight is provided, and\n            results closely align with real life events. If anyone is interested for the code behind the simulations,\n            feel free to check it out at this <a href=\"#\"> repo </a></p>)\n\n        return (\n\n            <div>\n                <Navigation />\n                <Grid stackable centered>\n                    <Grid.Row>\n                        <h2> Understanding Pandemic Spread </h2>\n                    </Grid.Row>\n\n                    <Grid.Row>\n                        <Message\n                            size=\"large\"\n                            className=\"disclaimer\"\n                            icon='chart bar'\n                            header='Explaining Simulations'\n                            content={message}\n                        />\n                    </Grid.Row>\n\n                    <Grid.Row centered columns={4}>\n                        <Grid.Column textAlign='center'>\n                            <h2> Susceptible </h2>\n                            <span id='dot' className=\"dot1\"></span>\n                        </Grid.Column>\n\n                        <Grid.Column textAlign='center'>\n                            <h2> Infected </h2>\n                            <span id='dot' className=\"dot2\"></span>\n                        </Grid.Column>\n\n                        <Grid.Column textAlign='center'>\n                            <h2> Recovered </h2>\n                            <span id='dot' className=\"dot3\"></span>\n                        </Grid.Column>\n\n                        <Grid.Column textAlign='center'>\n                            <h2> Deceased </h2>\n                            <span id='dot' className=\"dot4\"></span>\n                        </Grid.Column>\n\n                    </Grid.Row>\n\n                </Grid>\n\n\n                <div className='grid-wrappper'>\n\n                    <Grid stackable className=\"grid-video\" >\n                        <Grid.Row textAlign=\"right\">\n                            <h2 className=\"simulation-header\"> Our base model </h2>\n                            <p textAlign=\"left\"> This is the basic model of disease spread. The red curve represents\n                            the infected, blue represents the susceptible, green is recovered, grey is deceased.\n                            Important things to notice is that the red infection curve has a peak were the\n                            maximum number of infections occur. Succeeding to overcome or control a pandemic\n                            heavily depends on flattening that curve. Another important factor to notice is the length\n                            of each simulation. Each simulation stops whenever the disease is eradicated, and different\n                            control methods will lead to various eradication periods. All the following simulations\n                            are relative to this base model.</p>\n                            <p> Here are the some quantifiying numbers. Due to the varying nature of the actual\n                            covid parameter, I have decided to randomly choose the base Infection Rate.\n                                </p>\n\n                            <ul>\n                                <li> Infection Rate: 50%. </li>\n                                <li> Infection Radius: 2 meters</li>\n                                <li> Speed of Particles: 2 m/s</li>\n                                <li> Number of Citizens: 160</li>\n                            </ul>\n\n                        </Grid.Row>\n\n\n                        <Grid.Row columns={2}>\n                            <Grid.Column >\n                                <Grid.Row>\n                                    <h2> Simulation </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n\n                                    <div className=\"video-left\">\n                                        <video autoPlay loop controls >\n                                            <source src={Agent1} type=\"video/mp4\" />\n                                        </video>\n                                    </div>\n                                </Grid.Row>\n\n\n                            </Grid.Column>\n\n                            <Grid.Column >\n\n                                <Grid.Row>\n                                    <h2> SIR Model </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n                                    <div className=\"video-right\">\n                                        <img className=\"sir\" src={Sir1}></img>\n                                    </div>\n                                </Grid.Row>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                    </Grid>\n\n                </div>\n\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n\n                <div className='grid-wrappper'>\n\n                    <Grid stackable className=\"grid-video\" >\n                        <Grid.Row textAlign=\"right\">\n                            <h2 className=\"simulation-header\"> Doubling the Infection Radius </h2>\n\n                            <p > The infection radius is minimum distance you have to keep from an infected\n                            person in order not to catch the disease. Since Covid-19 could be transmitted through air, this is an\n                            important factor to study. In this simulation I doubled the infection radius to 4 meters. Looking at the SIR Model,\n                            the peak of the curve almost doubles, and every susceptible person gets infected. Another thing to notice\n                            is that the disease is eradicated in half the time of our base model. Also,\n                            the number of deaths due to the disease is almost identical to our base model.\n                            This simulation shows why it is extremely\n                            important to wear masks, as it can have a high impact on flattening the curve. Masks reduce the spread of\n                            airborne particles, hence reducing the radius of infection.\n                             </p>\n\n\n\n                        </Grid.Row>\n\n                        <Grid.Row columns={2}>\n                            <Grid.Column >\n                                <Grid.Row>\n                                    <h2> Simulation </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n\n                                    <div className=\"video-left\">\n                                        <video autoPlay loop controls >\n                                            <source src={Agent2} type=\"video/mp4\" />\n                                        </video>\n                                    </div>\n                                </Grid.Row>\n\n\n                            </Grid.Column>\n\n                            <Grid.Column >\n\n                                <Grid.Row>\n                                    <h2> SIR Model </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n                                    <div className=\"video-right\">\n                                        <img className=\"sir\" src={Sir2}></img>\n                                    </div>\n                                </Grid.Row>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                    </Grid>\n\n                </div>\n\n\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n\n                <div className='grid-wrappper'>\n\n                    <Grid stackable className=\"grid-video\" >\n                        <Grid.Row textAlign=\"right\">\n                            <h2 className=\"simulation-header\"> Reducing the Infection Rate by 50% </h2>\n                            <p textAlign=\"left\"> The infection rate refers to the likelihood  that you'll catch the disease\n                            by coming in contact with an infected person. In this simulation we reduced the infection rate to 25%.\n                            In real life, reducing the infection rate is very correlated with personal hygiene. Constantly washing your\n                            hands, keeping your household clean, not touching your face, etc. are all examples of how you reduce the probability\n                            of you catching a disease if you come into contact with it. The results are quite remarkable. The curve peaks at 38 infections\n                            compared to 74 in the base model, about half the peak. The duration of the disease lasts 1.7 times more than our\n                            base model. In conclusion, the infection rate successfully flattens the curve at the expense of extending the duration\n                            of the disease. </p>\n\n                        </Grid.Row>\n\n                        <Grid.Row columns={2}>\n                            <Grid.Column >\n                                <Grid.Row>\n                                    <h2> Simulation </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n\n                                    <div className=\"video-left\">\n                                        <video autoPlay loop controls >\n                                            <source src={Agent3} type=\"video/mp4\" />\n                                        </video>\n                                    </div>\n                                </Grid.Row>\n\n\n                            </Grid.Column>\n\n                            <Grid.Column >\n\n                                <Grid.Row>\n                                    <h2> SIR Model </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n                                    <div className=\"video-right\">\n                                        <img className=\"sir\" src={Sir3}></img>\n                                    </div>\n                                </Grid.Row>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                    </Grid>\n\n                </div>\n\n\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n\n                <div className='grid-wrappper'>\n\n                    <Grid stackable className=\"grid-video\" >\n                        <Grid.Row textAlign=\"right\">\n                            <h2 className=\"simulation-header\">  Reducing the Speed of Movement by 35% </h2>\n                            <p textAlign=\"left\"> This was the most surpising result. I reduced the speed of movement from 2m/s to 1.3m/s.\n                            In very loose terms, this sort of mimics the social distancing. Ideally, to ensure that no contact occurs between\n                            people, no one would move at all. Reducing the speed of movement reduces the amount of people you contact per day,\n                            hence in some sense, it mimicks what social distancing. I may be completely wrong, but the results are too good to ignore.\n                            Looking at the SIR model, the curve peaks at 30 infections, which is 60% less than the base model peak. The time for the disease\n                            to eradicate 110% of the the base model time, which is very close. Another important result is the number of deaths. The base model\n                            had 17 deaths out of 160. This simulation had 6 deaths out of 160, which is 65% less deaths than the base model.\n                            Reducing the speed of movement is by far the most effective control parameter in this experiment. It has the lowest peak,\n                            lowest numbers of deaths, and a relatively short timeline for the disease eradication. Moral of the story, stat at home and reduce\n                            contact with others as much as possible (until Covid is over).\n                             </p>\n\n                        </Grid.Row>\n\n                        <Grid.Row columns={2}>\n                            <Grid.Column >\n                                <Grid.Row>\n                                    <h2> Simulation </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n\n                                    <div className=\"video-left\">\n                                        <video autoPlay loop controls >\n                                            <source src={Agent4} type=\"video/mp4\" />\n                                        </video>\n                                    </div>\n                                </Grid.Row>\n\n\n                            </Grid.Column>\n\n                            <Grid.Column >\n\n                                <Grid.Row>\n                                    <h2> SIR Model </h2>\n                                </Grid.Row>\n                                <Grid.Row>\n                                    <div className=\"video-right\">\n                                        <img className=\"sir\" src={Sir4}></img>\n                                    </div>\n                                </Grid.Row>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                    </Grid>\n\n                </div>\n\n\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n                {/*  ---------------------------------------------------------*/}\n\n\n\n\n            </div >\n\n\n\n        );\n    }\n}\n\nexport default Explore;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  //  Replace Hash with BrowserRouter if server fails\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css'\nimport Homepage from \"./components/homepage\";\nimport Countries from \"./components/countries\";\nimport Country from \"./components/countryview\";\nimport About from \"./components/about\";\nimport Explore from \"./components/explore\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route exact path=\"/countries\" component={Countries} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/simulation\" component={Explore} />\n\n          <Route exact path=\"/info/:country\" component={withRouter(Country)} />\n        </Switch>\n      </Router >\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"media/Agent-0.5-7-1.9.1a85c6c1.mp4\";","module.exports = __webpack_public_path__ + \"media/Agent-0.5-14-1.9.84461383.mp4\";","module.exports = __webpack_public_path__ + \"media/Agent-0.25-7-1.9.e0223792.mp4\";","module.exports = __webpack_public_path__ + \"media/Agent-0.5-7-1.2.0cca4275.mp4\";","module.exports = __webpack_public_path__ + \"media/SIR-0.5-7-1.9.5eefa0d1.png\";","module.exports = __webpack_public_path__ + \"media/SIR-0.5-14-1.9.9f80bba8.png\";","module.exports = __webpack_public_path__ + \"media/SIR-0.25-7-1.9.7f0349bb.png\";","module.exports = __webpack_public_path__ + \"media/SIR-0.5-7-1.2.930ae311.png\";","module.exports = __webpack_public_path__ + \"media/logo.5d5d9eef.svg\";"],"sourceRoot":""}